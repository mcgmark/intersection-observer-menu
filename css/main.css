/*! HTML5 Boilerplate v8.0.0 | MIT License | https://html5boilerplate.com/ */

/* main.css 2.1.0 | MIT License | https://github.com/h5bp/main.css#readme */
/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
   Base styles: opinionated defaults
   ========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
   Author's custom styles
   ========================================================================== */

:root { /* create variables for repeated properties */
  --orange: rgb(255, 183, 0);
  --white: rgb(255, 255, 255);
  --boxbgtransparent: rgba(19, 19, 19, 0.461);
  --radius: 25px;
}

body {
  font-family: 'Nunito', sans-serif;
  color:var(--white);
  display: grid; /* Use grid layout for page */
  grid-template-columns: 2fr, 1fr; /* Create 2 column grid left larger than right */
  max-width: 1200px;
  margin: auto;
  padding: 50px 0px 50px 25px;
  background-image: linear-gradient(170deg, rgba(0, 179, 255, 0.546)0%, rgba(0, 0, 0, 0.387) 10%), url(../img/memphis-mini-dark.png);  /*Give background a gradient and pattern image image from https://www.toptal.com/designers/subtlepatterns */
}

a {
  color: var(--orange); /* Use variable to set colour */
  text-decoration: none; /* Remove underline from hyperlinks */
}

a:hover { 
  color:var(--white); /* Change color to white on hover */
}

header {
  display: flex; /* Use flexbox to easily center header text */
  flex-direction: column;
  justify-content: center;
  font-size: 250%;
  color: var(--orange);
  border-bottom: 5px solid var(--orange);
  padding: 60px 30px 60px 30px;
}

header h1,
header p {
  margin: 0;
  padding: 0;
}

header p {
  color:var(--white);
}

nav {
  font-size: 120%;
  padding: 20px 0px 0px 20px;
  margin-left: 40px;
  position: sticky; /* set nav element to position sticky so it doesn't scroll out of the viewport */
  width: 250px;
  top: 50px;
  height: 500px;
  box-sizing: border-box;
  overflow: hidden;
  grid-column-start: 2; /* set the column start to force the nav element into the second column */
  grid-column-end: 3;
  border-left: 2px solid var(--orange);
  transition: all 1s; /* transition set to all to animate css property changes using javascript */
}

.white {  /* Class used by javascript to change nav link color */
  color: var(--white);
}

.orange { /* Class used by javascript to change nav link color */
  color: var(--orange);
}

nav h2,
section h2 {
  color: var(--orange);
  margin: 0px;
}

nav ol {
  padding: 0px 25px;
}

nav li {
  padding-bottom: 20px;
}

main article section {
  font-size: 115%;
  padding: 70px 70px 100px 70px;
  line-height: 2em;
}

main article section:first-of-type { /* Use first of type to target the first section element in main */
  padding-top: 110px;
}

main article section:nth-of-type(1),   /* Use nth of type to select section element 1 and 2 of the main section */
main article section:nth-of-type(2) {
  border-bottom: 1px solid var(--orange);
}

main article section:last-of-type { /* Use last of type to select the last section element of the main section */
  border-bottom: 5px solid var(--orange);
}

main article section p:first-of-type { /* select the first P elements in all of the main sections */
  font-size: 130%;
}

main aside {
  display: flex;
  flex-direction: column;
  gap: 20px;
  align-items: stretch;
  margin: 100px 0px 25px 0px;
  font-size: 110%;
}

main aside section {
  padding: 50px;
  border-radius: var(--radius);
  background-color: var(--boxbgtransparent);
}

main aside h3::before {
  font: var(--fa-font-solid);
  content: "\f061";
  padding: 5px;
}

footer {
  grid-column-start: 1;
  grid-column-end: 2;
  padding: 10px;
  margin-top: 20px;
  border-radius: var(--radius);
  text-align: center;
  background-color: var(--boxbgtransparent);
}

@media only screen and (min-width: 2000px) {    /* Media query to adjust element properties for larger viewports */ 

  body {
    max-width: 1700px;
  }
  header {
    font-size: 300%;
  }
  main article section {
    font-size: 160%;
  }
  main article section p:first-of-type {
    font-size: 160%;
  }
  main aside {
    font-size: 170%;
  }
}

@media only screen and (max-width: 820px) { /* Media query to adjust element properties for smaller viewports */
  body {
    padding: 20px;
    display: block;
  }

  header {
    font-size: 175%;
    margin-bottom: 30px;
    padding: 20px 20px 50px 20px;
  }

  nav {
    height: 310px;
    width: 100%;
    grid-column-start: 1;
    grid-column-end: 3;
    margin-left: 0px;
    margin-bottom: 10px;
    border-left: 0px;
    border-bottom: 1px solid var(--orange);
    position: static;
  }

  main article section {
    font-size: 110%;
    padding: 40px 20px 50px 20px;
  }

  main article section:first-of-type {
    padding-top: 40px;
  }

  main aside {
    margin: 50px 0px 25px 0px;
    font-size: 90%;
  }

  main aside section {
    padding: 10px;
  }
}

/* ==========================================================================
   Helper classes
   ========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden,
[hidden] {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.sr-only {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  white-space: nowrap;
  width: 1px;
  /* 1 */
}

/*
 * Extends the .sr-only class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.sr-only.focusable:active,
.sr-only.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  white-space: inherit;
  width: auto;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix::before,
.clearfix::after {
  content: " ";
  display: table;
}

.clearfix::after {
  clear: both;
}

/* ==========================================================================
   EXAMPLE Media Queries for Responsive Design.
   These examples override the primary ('mobile first') styles.
   Modify as content requires.
   ========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
(-webkit-min-device-pixel-ratio: 1.25),
(min-resolution: 1.25dppx),
(min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
   Print styles.
   Inlined to avoid the additional HTTP request:
   https://www.phpied.com/delay-loading-your-print-css/
   ========================================================================== */

@media print {

  *,
  *::before,
  *::after {
    background: #fff !important;
    color: #000 !important;
    /* Black prints faster */
    box-shadow: none !important;
    text-shadow: none !important;
  }

  a,
  a:visited {
    text-decoration: underline;
  }

  a[href]::after {
    content: " (" attr(href) ")";
  }

  abbr[title]::after {
    content: " (" attr(title) ")";
  }

  /*
   * Don't show links that are fragment identifiers,
   * or use the `javascript:` pseudo protocol
   */
  a[href^="#"]::after,
  a[href^="javascript:"]::after {
    content: "";
  }

  pre {
    white-space: pre-wrap !important;
  }

  pre,
  blockquote {
    border: 1px solid #999;
    page-break-inside: avoid;
  }

  /*
   * Printing Tables:
   * https://web.archive.org/web/20180815150934/http://css-discuss.incutio.com/wiki/Printing_Tables
   */
  thead {
    display: table-header-group;
  }

  tr,
  img {
    page-break-inside: avoid;
  }

  p,
  h2,
  h3 {
    orphans: 3;
    widows: 3;
  }

  h2,
  h3 {
    page-break-after: avoid;
  }
}